version: '3.8'

services:
  # PostgreSQL database for Synapse
  postgres:
    image: postgres:15-alpine
    container_name: matrix-postgres
    environment:
      POSTGRES_DB: synapse
      POSTGRES_USER: synapse
      POSTGRES_PASSWORD: synapse_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synapse -d synapse"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Synapse caching
  redis:
    image: redis:7-alpine
    container_name: matrix-redis
    networks:
      - matrix-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Matrix Synapse homeserver - Using older version for simplicity
  synapse:
    image: matrixdotorg/synapse:v1.98.0
    container_name: matrix-synapse
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SYNAPSE_SERVER_NAME=localhost
      - SYNAPSE_REPORT_STATS=no
      - SYNAPSE_ENABLE_REGISTRATION=yes
      - SYNAPSE_NO_TLS=yes
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=synapse_password
      - POSTGRES_DB=synapse
      - SYNAPSE_LOG_LEVEL=INFO
    volumes:
      - synapse_data:/data
    networks:
      - matrix-network
    ports:
      - "8008:8008"
      - "8448:8448"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8008/_matrix/client/versions || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Synapse Admin interface
  synapse-admin:
    image: awesometechnologies/synapse-admin:latest
    container_name: matrix-admin
    depends_on:
      - synapse
    environment:
      - REACT_APP_SERVER=http://localhost:8008
    ports:
      - "8080:80"
    networks:
      - matrix-network
    restart: unless-stopped

  # Element Web client
  element:
    image: vectorim/element-web:latest
    container_name: matrix-element
    volumes:
      - ./docker/element/config.json:/app/config.json:ro
    ports:
      - "8081:80"
    networks:
      - matrix-network
    restart: unless-stopped

volumes:
  postgres_data:
  synapse_data:

networks:
  matrix-network:
    driver: bridge